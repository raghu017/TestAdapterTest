- name: simple help test
  namespace: SimpleNamespace
  script: spx
  expect: |
    (?# ---------- BANNER)
    (?=SPX - Azure Speech CLI(, Version [1]\.[0-9]{2}[^\r]+){0,1}\r?$\n)
    ^SPX - Azure Speech CLI(, Version [1]\.[0-9]{2}[^\r]+){0,1}\r?$\n
    ^Copyright \(c\) 202[0-9] Microsoft Corporation\. All Rights Reserved\.\r?$\n
    ^\r?$\n

    (?# ---------- LOGO)
    ^  ______ ___ _  __\r?$\n
    ^ /  ___// _ \\ \\/ /\r?$\n
    ^ \\___ \\/ ___/   <\r?$\n
    ^/____ /_/  /__/\\_\\\r?$\n
    ^\r?$\n

    (?# ---------- USAGE + HELP)
    ^USAGE: spx <command> \[\.\.\.\]\r?$\n
    ^\r?$\n
    ^HELP\r?$\n
    ^\r?$\n
    ^  spx help\r?$\n
    ^  spx help setup\r?$\n
    ^\r?$\n

    (?# ---------- COMMANDS)
    ^COMMANDS\r?$\n
    ^\r?$\n
    ^  spx config \[\.\.\.\]          \(see: spx help config\)\r?$\n
    ^\r?$\n
    ^  spx recognize \[\.\.\.\]       \(see: spx help recognize\)\r?$\n
    ^  spx synthesize \[\.\.\.\]      \(see: spx help synthesize\)\r?$\n
    ^\r?$\n
    ^  spx intent \[\.\.\.\]          \(see: spx help intent\)\r?$\n
    ^  spx translate \[\.\.\.\]       \(see: spx help translate\)\r?$\n
    ^\r?$\n
    ^  spx batch \[\.\.\.\]           \(see: spx help batch\)\r?$\n
    ^  spx csr \[\.\.\.\]             \(see: spx help csr\)\r?$\n
    ^\r?$\n
    ^  spx profile \[\.\.\.\]         \(see: spx help profile\)\r?$\n
    ^  spx speaker \[\.\.\.\]         \(see: spx help speaker\)\r?$\n
    ^\r?$\n
    ^  spx webjob \[\.\.\.\]          \(see: spx help webjob\)\r?$\n
    ^\r?$\n

    (?# ---------- ADDITIONAL TOPICS)
    ^ADDITIONAL TOPICS\r?$\n
    ^\r?$\n
    ^  spx help examples\r?$\n
    ^\r?$\n
    ^  spx help find --topics "examples"\r?$\n
    ^  spx help find --text "example"\r?$\n
    ^  spx help find \*\r?$\n
    ^\r?$\n
    ^  spx help documentation\r?$\n
    ^\r?$\n

- name: recognize what's the weather like?
  command: recognize --file https://crbn.us/whatstheweatherlike.wav 
  expect: |
    ^SESSION STARTED: \w+\r?$\n
    ^\r?$\n
    ^Connection CONNECTED\.\.\.\r?$\n
    RECOGNIZED: What's the weather like\?\r?$\n
    ^\r?$\n
    ^SESSION STOPPED: \w+\r?$\n
  log-expect: |
    path:.*turn.start
    path:.*turn.end

- name: 2 byte recognition
  script: echo ..|spx recognize --file -
  expect: |
    SESSION STARTED: \w+\r?$\n
    ^\r?$\n
    ^Connection CONNECTED\.\.\.\r?$\n
    ^SESSION STOPPED: \w+\r?$\n

#- name: speech_recognizer_tests.prep INPUTS
#  script: |
#    spx config @WAIT_FOR_RECO_RESULT_TIME --set 60000

#    spx config @SINGLE_UTTERANCE.Text --set "This is a test."
#    spx config @SINGLE_UTTERANCE.FilePath --set this-is-a-test.wav
#    spx synthesize --text @SINGLE_UTTERANCE.Text --audio output this-is-a-test.wav

#    spx config @SINGLE_UTTERANCE_MP3.Text --set Hello.
#    spx config @SINGLE_UTTERANCE_MP3.FilePath --set hello.mp3
#    spx synthesize --text @SINGLE_UTTERANCE_MP3.Text --format mp3 --audio output hello.mp3

#- name: speech_recognizer_tests.push stream works mp3
#  command: recognize
#    --file @SINGLE_UTTERANCE_MP3.FilePath
#    --format mp3
#    --check text eq @SINGLE_UTTERANCE_MP3.Text
#    --continuous --timeout @WAIT_FOR_RECO_RESULT_TIME

#- name: speech_recognizer_tests.start and stop
#  command: recognize
#    --file @SINGLE_UTTERANCE.FilePath
#    --check text eq @SINGLE_UTTERANCE.Text
#    --continuous --timeout @WAIT_FOR_RECO_RESULT_TIME

#- name: speech_recognizer_tests.start and then stop immediately
#  script:
#    spx recognize
#      --file @SINGLE_UTTERANCE.FilePath
#      --continuous --timeout 0
#      --expect "SESSION\sSTARTED:;SESSION\sSTOPPED:"

#    spx recognize
#      --file @SINGLE_UTTERANCE.FilePath
#      --continuous --timeout 0
#      --expect "SESSION\sSTARTED:;SESSION\sSTOPPED:"
#      --fast 0 --not expect "RECOGNIZED:"

- namespace: speech_recognizer_tests
  tests:

  - name: push stream works mp3
    namespace: push stream
    command: recognize
      --file @single_utterance_mp3.filepath
      --format mp3
      --check text eq @single_utterance_mp3.text
      --continuous --timeout @wait_for_reco_result_time

  - name: start and stop
    command: recognize
      --file @single_utterance.filepath
      --check text eq @single_utterance.text
      --continuous --timeout @wait_for_reco_result_time

  - namespace: start and stop immediately
    tests:

    - name: regular
      command: recognize
        --file @single_utterance.filepath
        --continuous --timeout 0
        --expect "SESSION\sSTARTED:;SESSION\sSTOPPED:"

    - name: fast 0 (no recognized)
      command:
        spx recognize
          --file @single_utterance.filepath
          --continuous --timeout 0
          --expect "SESSION\sSTARTED:;SESSION\sSTOPPED:"
          --fast 0 --not expect "recognized:"
